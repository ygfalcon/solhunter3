[project]
name = "solhunter-zero"
version = "0.1.0"
description = "Autonomous AI-driven trading bot for the Solana blockchain"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "requests>=2.31,<3.0",
    "sqlalchemy>=2.0,<3.0",
    "sqlparse>=0.5,<0.6",
    "numpy>=1.24,<3.0",
    "pandas>=1.5,<3.0",
    "scikit-learn>=1.3,<2.0",

    "solana>=0.36,<0.37",
    "solders>=0.26,<0.27",
    "bip-utils>=2.9,<3.0",
    "flask>=2.3,<3.0",

    "aiohttp>=3.8,<4.0",
    "aiofiles>=23.1,<25.0",
    "websockets>=11,<13",
    "pyyaml>=6.0,<7.0",
    "tomli_w>=1.0,<2.0",
    "cachetools>=5.3,<6.0",
    "watchfiles>=0.19,<2.0",
    "pydantic>=1.10,<3.0",
    "cryptography>=41,<44",
    "rich>=13,<14",
    "protobuf>=6.31,<7",
]

[project.optional-dependencies]
demo = [
    "aiohttp>=3.8,<4.0",
    "aiofiles>=23.1,<25.0",
    "numpy>=1.24,<3.0",
    "solana>=0.36,<0.37",
    "solders>=0.26,<0.27",
]
full = [
    "torch>=2.0,<3.0",
    "pytorch-lightning>=2.0,<3.0",
    "faiss-cpu>=1.7,<2.0",
    "sentence-transformers>=2.2,<3.0",
    "transformers>=4.30,<5.0",
    "psutil>=5.9,<6.0",
]
uvloop = ["uvloop"]
extras = [
    "psutil>=5.9,<6.0",
]
dev = [
    "pytest",
    "pytest-asyncio",
    "flake8",
    "grpcio-tools",
    "mypy",
]
numba = ["numba"]
fastjson = ["orjson"]
fastcompress = ["lz4", "zstandard"]
msgpack = ["msgpack"]
orjson = ["orjson"]
zstandard = ["zstandard"]
ray = ["ray[rllib]"]

[project.scripts]
solhunter-wallet = "solhunter_zero.wallet_cli:main"
solhunter-backtest = "solhunter_zero.backtest_cli:main"
solhunter-train = "solhunter_zero.train_cli:main"
solhunter-demo = "scripts.investor_demo:main"
solhunter-start = "solhunter_zero.launcher:main"
solhunter-one-click = "scripts.setup_one_click:main"

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "grpcio-tools>=1.60,<2.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["solhunter_zero*", "scripts*"]

[tool.setuptools.package-data]
"solhunter_zero" = [
    "libroute_ffi.so",
    "libroute_ffi.dylib",
    "data/*.json",
]
