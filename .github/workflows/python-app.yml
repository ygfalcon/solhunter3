name: Quality Gates

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.11"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
      - name: Lint and compile
        run: |
          python scripts/check_protos.py
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          python -m compileall -q .
      - name: Run unit tests
        env:
          CI: "true"
          SOLHUNTER_PATCH_INVESTOR_DEMO: "1"
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          mkdir -p build
          pytest -m "not slow and not integration" --junitxml=build/unit-tests.xml
      - name: Bundle artifacts
        if: always()
        run: |
          python scripts/ci_bundle_artifacts.py \
            --job-name unit-tests \
            --output build/unit-artifacts \
            --junit-path build/unit-tests.xml \
            --include artifacts \
            --include health \
            --include logs \
            --include metrics \
            --metadata commit=${{ github.sha }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-artifacts
          path: build/unit-artifacts

  golden-determinism:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
      - name: Run golden determinism suite
        env:
          CI: "true"
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          mkdir -p build
          pytest tests/test_golden_pipeline.py::test_golden_snapshot_metrics_and_determinism \
            --junitxml=build/golden-determinism.xml
      - name: Bundle artifacts
        if: always()
        run: |
          python scripts/ci_bundle_artifacts.py \
            --job-name golden-determinism \
            --output build/golden-artifacts \
            --junit-path build/golden-determinism.xml \
            --include artifacts \
            --include logs \
            --metadata commit=${{ github.sha }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-determinism-artifacts
          path: build/golden-artifacts

  headless-ui-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
      - name: Run headless UI smoke tests
        env:
          CI: "true"
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          mkdir -p build
          pytest \
            tests/test_ui_meta_ws.py \
            tests/golden_pipeline/test_ui_smoke_synth.py \
            --junitxml=build/ui-smoke.xml
      - name: Bundle artifacts
        if: always()
        run: |
          python scripts/ci_bundle_artifacts.py \
            --job-name headless-ui-smoke \
            --output build/ui-artifacts \
            --junit-path build/ui-smoke.xml \
            --include artifacts \
            --include health \
            --metadata commit=${{ github.sha }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: headless-ui-smoke-artifacts
          path: build/ui-artifacts

  chaos-suite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'
      - name: Run short chaos suite
        env:
          CI: "true"
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          mkdir -p build
          pytest -m chaos --junitxml=build/chaos.xml
      - name: Bundle artifacts
        if: always()
        run: |
          python scripts/ci_bundle_artifacts.py \
            --job-name chaos-suite \
            --output build/chaos-artifacts \
            --junit-path build/chaos.xml \
            --include artifacts \
            --include logs \
            --metadata commit=${{ github.sha }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chaos-suite-artifacts
          path: build/chaos-artifacts
